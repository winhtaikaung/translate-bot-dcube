# See here for image contents: https://github.com/microsoft/vscode-dev-containers/tree/v0.245.2/containers/go/.devcontainer/base.Dockerfile

# [Choice] Go version (use -bullseye variants on local arm64/Apple Silicon): 1, 1.19, 1.18, 1-bullseye, 1.19-bullseye, 1.18-bullseye, 1-buster, 1.19-buster, 1.18-buster
ARG VARIANT="1.19-bullseye"
FROM mcr.microsoft.com/vscode/devcontainers/go:0-${VARIANT}

# [Choice] Node.js version: none, lts/*, 18, 16, 14
ARG NODE_VERSION="none"
RUN if [ "${NODE_VERSION}" != "none" ]; then su vscode -c "umask 0002 && . /usr/local/share/nvm/nvm.sh && nvm install ${NODE_VERSION} 2>&1"; fi

# [Optional] Uncomment this section to install additional OS packages.
RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \
    && apt-get -y install --no-install-recommends protobuf-compiler golang-goprotobuf-dev ngrep docker-compose

ENV GOFLAGS=-buildvcs=false

RUN mkdir /temp_docker && chmod -R +x /temp_docker && cd /temp_docker
RUN mkdir /var/log/ngrok && chmod -R +x /var/log


ADD ngrok-stable-linux-386.zip /temp_docker/ngrok-stable-linux-386.zip
RUN cd /temp_docker && unzip /temp_docker/ngrok-stable-linux-386.zip
RUN cp /temp_docker/ngrok /usr/local/bin/
RUN chmod +x /usr/local/bin/ngrok

RUN rm -rf /temp_docker
# [Optional] Uncomment the next lines to use go get to install anything else you need
# USER vscode
# RUN go get -x <your-dependency-or-tool>

# [Optional] Uncomment this line to install global node packages.
# RUN su vscode -c "source /usr/local/share/nvm/nvm.sh && npm install -g <your-package-here>" 2>&1
